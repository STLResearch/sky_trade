// ignore_for_file: lines_longer_than_80_chars

// Schemes
const https = 'https';

// App links
const appLinkHttpScheme = 'http';
const appLinkHttpsScheme = 'https';
const uAppLinkPathSegment = 'u';
const emailVerificationAppLinkPathSegment = 'email-verification';
const uAppLinkPath = '/$uAppLinkPathSegment';
const emailVerificationAppLinkPath = '/$emailVerificationAppLinkPathSegment';
const ticketAppLinkQueryParameter = 'ticket';

// Social medial share links
const facebookWebShareLinkBaseUrl =
    'https://www.facebook.com/sharer/sharer.php';
const facebookShareLinkUrlQueryParameterKey = 'u';

const linkedInAppShareLinkBaseUrl = 'linkedin://shareArticle';
const linkedInWebShareLinkBaseUrl =
    'https://www.linkedin.com/sharing/share-offsite';
const linkedInShareLinkUrlQueryParameterKey = 'url';

const emailShareLinkBaseScheme = 'mailto';
const emailShareLinkSubjectQueryParameterKey = 'subject';
const emailShareLinkBodyQueryParameterKey = 'body';

const xAppShareLinkBaseUrl = 'twitter://post';
const xWebShareLinkBaseUrl = 'https://twitter.com/intent/tweet';
const xShareLinkUrlQueryParameterKey = 'url';
const xShareLinkTextQueryParameterKey = 'text';
const xShareLinkMessageQueryParameterKey = 'message';

// OpenWeather
// Endpoints
// Paths
const imgPath = '/img';
const wnPath = '/wn';

// SkyTrade
// Privacy policy
const skyTradePrivacyPolicyUrl = 'https://docs.sky.trade/privacy.htm';
// Terms of service
const skyTradeTermsOfServiceUrl = 'https://docs.sky.trade/terms.htm';

// Paths
const airRightsPath = '/air-rights';
const getWeatherDataPath = '/get-weather-data';
const radarPath = '/radar';
const restrictionsPath = '/restrictions';
const suggestPath = '/suggest';
const retrievePath = '/retrieve';
const privatePath = '/private';
const publicPath = '/public';
const auctionHousePath = '/auction-house';
const usersPath = '/users';
const sessionPath = '/session';
const createPath = '/create';
const remoteIdentifierPath = '/remote-identifier';
const getDroneInsightsPath = '/get-drone-insights';
const filterDroneInsightsPath = '/filter-drone-insights';
const propertiesPath = '/properties';
const airspaceRentalPath = '/airspace-rental';
const createMintRentalTokenIxPath = '/create-mint-rental-token-ix';
const executeMintRentalTokenIxPath = '/execute-mint-rental-token-ix';
const requestDeletePath = '/request-delete';
const deleteUserPath = '/delete-user';
const getAirspaceDetailsPath = '/get-airspace-details';
const getAirspaceHistoryPath = '/get-airspace-history';
const getAuctionBidHistoryPath = '/get-auction-bid-history';
const generatePlaceBidTxPath = '/generate-place-bid-tx';
const getAllAuctionsPath = '/get-all-auctions';
const getAuctionWithBidsPath = '/get-auction-with-bids';
const getAuctionableAirspacesPath = '/get-auctionable-airspaces';
const sendTxPath = '/send-tx';
const generateCreateAuctionTxPath = '/generate-create-auction-tx';
const getOfferForUnclaimedPropertyPath = '/get-offer-for-unclaimed-property';
const rewardPath = '/reward';
const referralCodePath = '/referral-code';
const getRewardInfoPath = '/get-reward-info';
const retrieveReferralDataPath = '/retrieve-referral-data';
const sendReferralPath = '/send-referral';
const findReferralHistoryPath = '/find-referral-history';
const currentLeaderboardPositionPath = '/current-leaderboard-position';
const currentLeaderboardInfoPath = '/current-leaderboard-info';
const overralLeaderboardInfoPath = '/overral-leaderboard-info';
// Signature
const signatureFirstLine = 'wants you to sign in with your Solana account:';
const signatureThirdLine = 'Sign in to SkyTrade app.';
const signatureFourthLine = 'URI:';
const signatureFifthLine = 'Version: 1';
const signatureSixthLine = 'Chain ID: 1';
const signatureSeventhLine = 'Nonce:';
const signatureEightLine = 'Issued At:';

// Socket IO
const websocketTransport = 'websocket';

const uasActivityResponseEvent = 'get-sql-drone-data-response';
const uasActivityEvent = 'get-sql-drone-data';

const remoteIDTransmissionResponseEvent = 'store-drone-data-response';
const remoteIDTransmissionEvent = 'store-drone-data';

const droneFlightPathResponseEvent = 'retrieve-drone-data-response';
const droneFlightPathEvent = 'retrieve-drone-data';

// Request and response header and body keys and values
// Headers
const contentTypeHeaderKey = 'Content-Type';
const applicationJsonHeaderValue = 'application/json';
const acceptHeaderKey = 'Accept';
const acceptAllHeaderValue = '*/*';
const signHeaderKey = 'sign';
const signIssueAtHeaderKey = 'sign_issue_at';
const signNonceHeaderKey = 'sign_nonce';
const signAddressHeaderKey = 'sign_address';
const emailAddressHeaderKey = 'email_address';
// Body
const additionalLinksKey = 'additional_links';
const countryKey = 'country';
const upperLimitKey = 'upper_limit';
const lowerLimitKey = 'lower_limit';
const messageKey = 'message';
const propertiesKey = 'properties';
const typeKey = 'type';
const linkKey = 'link';
const mapboxIdKey = 'mapbox_id';
const nameKey = 'name';
const featuresKey = 'features';
const geometryKey = 'geometry';
const coordinatesKey = 'coordinates';
const dangerValue = 'Danger';
const prohibitedValue = 'Prohibited';
const restrictedValue = 'Restricted';
const pointValue = 'Point';
const lineStringValue = 'LineString';
const polygonValue = 'Polygon';
const multiPointValue = 'MultiPoint';
const multiLineStringValue = 'MultiLineString';
const multiPolygonValue = 'MultiPolygon';
const geoHashKey = 'geoHash';
const countKey = '_count';
const dataKey = 'data';
const idKey = 'id';
const remoteDataKey = 'remoteData';
const createdAtKey = 'createdAt';
const updateAtKey = 'updateAt';
const selfIdKey = 'selfId';
const systemKey = 'system';
const locationKey = 'location';
const connectionKey = 'connection';
const macAddressKey = 'macAddress';
const operatorIdKey = 'operatorId';
const identification1Key = 'identification1';
const identification2Key = 'identification2';
const descriptionTypeKey = 'descriptionType';
const operationDescriptionKey = 'operationDescription';
const descriptionKey = 'description';
const categoryKey = 'category';
const areaCountKey = 'areaCount';
const areaFloorKey = 'areaFloor';
const areaRadiusKey = 'areaRadius';
const classValueKey = 'classValue';
const areaCeilingKey = 'areaCeiling';
const systemTimestampKey = 'systemTimestamp';
const operatorLatitudeKey = 'operatorLatitude';
const operatorLongitudeKey = 'operatorLongitude';
const classificationTypeKey = 'classificationType';
const operatorAltitudeGeoKey = 'operatorAltitudeGeo';
const operatorLocationTypeKey = 'operatorLocationType';
const heightKey = 'height';
const statusKey = 'status';
const distanceKey = 'distance';
const latitudeKey = 'latitude';
const directionKey = 'direction';
const longitudeKey = 'longitude';
const heightTypeKey = 'heightType';
const baroAccuracyKey = 'baroAccuracy';
const timeAccuracyKey = 'timeAccuracy';
const speedAccuracyKey = 'speedAccuracy';
const speedVerticalKey = 'speedVertical';
const speedHorizontalKey = 'speedHorizontal';
const altitudeGeodeticKey = 'altitudeGeodetic';
const altitudePressureKey = 'altitudePressure';
const verticalAccuracyKey = 'verticalAccuracy';
const locationTimestampKey = 'locationTimestamp';
const horizontalAccuracyKey = 'horizontalAccuracy';
const rssiKey = 'rssi';
const lastSeenKey = 'lastSeen';
const msgDeltaKey = 'msgDelta';
const firstSeenKey = 'firstSeen';
const transportTypeKey = 'transportType';
const uasIdKey = 'uasId';
const idTypeKey = 'idType';
const uaTypeKey = 'uaType';
const suggestionsKey = 'suggestions';
const attributionKey = 'attribution';
const placeFormattedKey = 'place_formatted';
const namePreferredKey = 'name_preferred';
const qKey = 'q';
const accessTokenKey = 'access_token';
const sessionTokenKey = 'session_token';
const emailKey = 'email';
const blockchainAddressKey = 'blockchainAddress';
const newsletterKey = 'newsletter';
const categoryIdKey = 'categoryId';
const phoneNumberKey = 'phoneNumber';
const usernameKey = 'username';
const passwordKey = 'password';
const isAdminKey = 'isAdmin';
const kYCStatusIdKey = 'KYCStatusId';
const isActiveKey = 'isActive';
const usedReferralCodeIdKey = 'usedReferralCodeId';
const ownedReferralCodeIdKey = 'ownedReferralCodeId';
const isUserRewardClaimedKey = 'isUserRewardClaimed';
const ownedReferralCodeKey = 'ownedReferralCode';
const codeKey = 'code';
const codeChangedKey = 'codeChanged';
const usedByBonusEarnedKey = 'usedByBonusEarned';
const ownedByBonusEarnedKey = 'ownedByBonusEarned';
const isTestKey = 'isTest';
const deviceKey = 'device';
const rawDataKey = 'rawData';
const messageSourceKey = 'messageSource';
const basicIdsKey = 'basicIds';
const authenticationKey = 'authentication';
const serialNumberKey = 'serialNumber';
const registrationIdKey = 'registrationId';
const skyTradeBackendKey = 'SkyTrade_Backend';
const bluetoothLegacyKey = 'Bluetooth_Legacy';
const bluetoothLongRangeKey = 'Bluetooth_Long_Range';
const wifiNanKey = 'WiFi_NAN';
const wifiBeaconKey = 'WiFi_Beacon';
const unknownKey = 'Unknown';
const noneKey = 'None';
const aeroplaneKey = 'Aeroplane';
const helicopterOrMultirotorKey = 'Helicopter_or_Multirotor';
const gyroplaneKey = 'Gyroplane';
const hybridLiftKey = 'Hybrid_Lift';
const ornithopterKey = 'Ornithopter';
const gliderKey = 'Glider';
const kiteKey = 'Kite';
const freeBalloonKey = 'Free_balloon';
const captiveBalloonKey = 'Captive_balloon';
const airshipKey = 'Airship';
const freeFallParachuteKey = 'Free_fall_parachute';
const rocketKey = 'Rocket';
const tetheredPoweredAircraftKey = 'Tethered_powered_aircraft';
const groundObstacleKey = 'Ground_obstacle';
const otherKey = 'Other';
const serialNumberAltKey = 'Serial_Number';
const cAARegistrationIDKey = 'CAA_Registration_ID';
const uTMAssignedIDKey = 'UTM_Assigned_ID';
const specificSessionIDKey = 'Specific_Session_ID';
const groundKey = 'Ground';
const airborneKey = 'Airborne';
const emergencyKey = 'Emergency';
const remoteIDSystemFailureKey = 'Remote_ID_System_Failure';
const takeoffKey = 'Takeoff';
const kilometers18_52Key = 'kilometers_18_52';
const kilometers7_408Key = 'kilometers_7_408';
const kilometers3_704Key = 'kilometers_3_704';
const kilometers1_852Key = 'kilometers_1_852';
const meters926Key = 'meters_926';
const meters555_6Key = 'meters_555_6';
const meters185_2Key = 'meters_185_2';
const meters92_6Key = 'meters_92_6';
const meters30Key = 'meters_30';
const meters10Key = 'meters_10';
const meters3Key = 'meters_3';
const meters1Key = 'meters_1';
const meters150Key = 'meters_150';
const meters45Key = 'meters_45';
const meters25Key = 'meters_25';
const meterPerSecond10Key = 'meter_per_second_10';
const meterPerSecond3Key = 'meter_per_second_3';
const meterPerSecond1Key = 'meter_per_second_1';
const meterPerSecond0_3Key = 'meter_per_second_0_3';
const takeOffKey = 'TakeOff';
const dynamicKey = 'Dynamic';
const fixedKey = 'Fixed';
const undeclaredKey = 'Undeclared';
const euKey = 'EU';
const operatorCoordinatesKey = 'operatorCoordinates';
const euOpenKey = 'EU_Open';
const euSpecificKey = 'EU_Specific';
const euCertifiedKey = 'EU_Certified';
const euClass0Key = 'EU_Class_0';
const euClass1Key = 'EU_Class_1';
const euClass2Key = 'EU_Class_2';
const euClass3Key = 'EU_Class_3';
const euClass4Key = 'EU_Class_4';
const euClass5Key = 'EU_Class_5';
const euClass6Key = 'EU_Class_6';
const euClass7Key = 'EU_Class_7';
const undefinedKey = 'Undefined';
const uasIdSignatureKey = 'UAS_ID_Signature';
const operatorIdSignatureKey = 'Operator_ID_Signature';
const messageSetSignatureKey = 'Message_Set_Signature';
const networkRemoteIdKey = 'Network_Remote_ID';
const specificAuthenticationKey = 'Specific_Authentication';
const privateUse0xAKey = 'Private_Use_0xA';
const privateUse0xBKey = 'Private_Use_0xB';
const privateUse0xCKey = 'Private_Use_0xC';
const privateUse0xDKey = 'Private_Use_0xD';
const privateUse0xEKey = 'Private_Use_0xE';
const privateUse0xFKey = 'Private_Use_0xF';
const authTypeKey = 'authType';
const authDataPageKey = 'authDataPage';
const authLastPageIndexKey = 'authLastPageIndex';
const authTimestampKey = 'authTimestamp';
const authDataKey = 'authData';
const authLengthKey = 'authLength';
const textKey = 'Text';
const extendedStatusKey = 'Extended_Status';
const privateKey = 'Private';
const operatorIdTypeKey = 'operatorIdType';
const operatorIDKey = 'Operator_ID';
const invalidKey = 'Invalid';
const operatorIdClassificationKey = 'operatorIdClassification';
const headersKey = 'headers';
const bodyKey = 'body';
const weatherKey = 'weather';
const iconKey = 'icon';
const mainKey = 'main';
const tempKey = 'temp';
const twoXValue = '2x';
const userIdKey = 'userId';
const devicesObservedKey = 'devicesObserved';
const devicesKey = 'devices';
const userKey = 'user';
const ipAddressKey = 'ipAddress';
const updatedAtKey = 'updatedAt';
const enabledKey = 'enabled';
const otpKey = 'otp';
const titleKey = 'title';
const transitFeeKey = 'transitFee';
const addressKey = 'address';
const timezoneKey = 'timezone';
const fullTimezoneKey = 'fullTimezone';
const hasLandingDeckKey = 'hasLandingDeck';
const hasChargingStationKey = 'hasChargingStation';
const hasStorageHubKey = 'hasStorageHub';
const isFixedTransitFeeKey = 'isFixedTransitFee';
const isRentableAirspaceKey = 'isRentableAirspace';
const ownerIdKey = 'ownerId';
const noFlyZoneKey = 'noFlyZone';
const isBoostedAreaKey = 'isBoostedArea';
const propertyStatusIdKey = 'propertyStatusId';
const isPropertyRewardClaimedKey = 'isPropertyRewardClaimed';
const isSoftDeleteKey = 'isSoftDelete';
const hasZoningPermissionKey = 'hasZoningPermission';
const orderPhotoForGeneratedMapKey = 'orderPhotoforGeneratedMap';
const assessorParcelNumberKey = 'assessorParcelNumber';
const externalBlockchainAddressKey = 'externalBlockchainAddress';
const areaPolygonKey = 'areaPolygon';
const tokenValueKey = 'tokenValue';
const layersKey = 'layers';
const propertyStatusKey = 'propertyStatus';
const vertexesKey = 'vertexes';
const weekDayRangesKey = 'weekDayRanges';
const imagesKey = 'images';
const priceKey = 'price';
const tokenIdKey = 'tokenId';
const propertyIdKey = 'propertyId';
const isCurrentlyInAuctionKey = 'isCurrentlyInAuction';
const fromTimeKey = 'fromTime';
const toTimeKey = 'toTime';
const isAvailableKey = 'isAvailable';
const weekDayIdKey = 'weekDayId';
const minLongitudeKey = 'minLongitude';
const minLatitudeKey = 'minLatitude';
const maxLongitudeKey = 'maxLongitude';
const maxLatitudeKey = 'maxLatitude';
const callerAddressKey = 'callerAddress';
const landAssetIdsKey = 'landAssetIds';
const startTimeKey = 'startTime';
const endTimeKey = 'endTime';
const transactionKey = 'transaction';
const ansKey = 'ans';
const geoJsonKey = 'geojson';
const rentPriceKey = 'rent_price';
const propertyIdAltKey = 'property_id';
const auctionKey = 'auction';
const amountKey = 'amount';
const accountKey = 'account';
const propertyKey = 'property';
const verifiedKey = 'Verified';
const partiallyVerifiedKey = 'PartiallyVerified';
const notVerifiedKey = 'NotVerified';
const rejectedKey = 'Rejected';
const auctionDetailsKey = 'auction_details';
const highestBidKey = 'highest_bid';
const auctionDeadlineKey = 'auction_deadline';
const lifetimeTotalIncomeKey = 'lifetime_total_income';
const totalIncomeMtdKey = 'total_income_mtd';
const totalIncomeWtdKey = 'total_income_wtd';
const airspaceHistoryKey = 'airspace_history';
const dateKey = 'date';
const bidsHistoryKey = 'bids_history';
const featureCollectionKey = 'FeatureCollection';
const geometryCollectionKey = 'GeometryCollection';
const pageKey = 'page';
const limitKey = 'limit';
const currentLimitKey = 'currentLimit';
const positionKey = 'position';
const minPriceKey = 'min_price';
const maxPriceKey = 'max_price';
const filterKey = 'filter';
const auctionIdKey = 'auction_id';
const serializedTxKey = 'serializedTx';
const assetIdKey = 'assetId';
const sellerKey = 'seller';
const initialPriceKey = 'initialPrice';
const secsDurationKey = 'secsDuration';
const signedTransactionKey = 'signedTransaction';
const landAddressKey = 'landAddress';
const offerAmountKey = 'offerAmount';
const pdaAddressKey = 'pdaAddress';
const endDateKey = 'endDate';
const currentPriceKey = 'currentPrice';
const currentBidderKey = 'currentBidder';
const paymentTokenKey = 'paymentToken';
const transactionsKey = 'transactions';
const isCancelledKey = 'isCancelled';
const isExecutedKey = 'isExecuted';
const isVerifiedKey = 'isVerified';
const isFilledKey = 'isFilled';
const filledAmountKey = 'filledAmount';
const auctionBidKey = 'AuctionBid';
const layerKey = 'layer';
const bidderKey = 'bidder';
const auctionIdAltKey = 'auctionId';
const txKey = 'tx';
const txSignatureKey = 'txSignature';
const errorKey = 'error';
const filterRangeKey = 'filterRange';
const intervalsKey = 'intervals';
const fromKey = 'from';
const toKey = 'to';
const valueKey = 'value';
const rangeKey = 'range';
const oneDKey = '1D';
const oneWKey = '1W';
const oneMKey = '1M';
const oneYKey = '1Y';
const statsKey = 'stats';
const sumKey = '_sum';
const pointKey = 'point';
const referralCodeKey = 'referralCode';
const registeredFriendsKey = 'registeredFriends';
const registeredAirspacesKey = 'registeredAirspaces';
const validatedPropertiesKey = 'validatedProperties';
const messagesKey = 'Messages';
const statusAltKey = 'Status';
const customIdKey = 'CustomID';
const toAltKey = 'To';
const emailAltKey = 'Email';
const messageUuidKey = 'MessageUUID';
const messageIdKey = 'MessageID';
const messageHrefKey = 'MessageHref';
const historiesKey = 'histories';
const balanceKey = 'balance';
const startDateKey = 'startDate';
const currentPeriodPointsKey = 'currentPeriodPoints';
const totalCountKey = 'totalCount';
const totalPointsKey = 'totalPoints';
const rewardCountKey = 'rewardCount';
const periodSummariesKey = 'periodSummaries';
const periodStartDateKey = 'periodStartDate';
const periodEndDateKey = 'periodEndDate';
const weatherDataKey = 'weatherData';
const unitsKey = 'units';
const imperialValue = 'imperial';
// Error response data message
const unauthorizedCode = 'UNAUTHORIZED';
const invalidSignatureCode = 'INVALID_SIGNATURE';
const userNotFoundCode = 'USER_NOT_FOUND'; // user does not exist
const invalidEmailCode = 'INVALID_EMAIL';
const userMismatchCode = 'USER_MISMATCH';
const userDeletedCode = 'USER_DELETED';
const aWalletAlreadyExistsForThisEmailAddressKindlySignInWithTheSameMethodUsedPreviouslyCode =
    'A wallet already exists for this email address. Kindly sign in with the same method used previously.';
const walletExistCode = 'WALLET_EXIST';
const invalidDeleteOtpCode = 'INVALID_DELETE_OTP';
// SFA error
const invalidResultFromNodesThresholdNumberOfPublicKeyResultsAreNotMatchingPleaseCheckConfiguration =
    'invalid result from nodes, threshold number of public key results are not matching, please check configuration';
// Socket exception messages added to Sentry logs
const socketExceptionLogMessage = 'Socket Exception';
const anErrorOccurredWhileProcessingTheEventLogMessage =
    'An error occurred while processing the event';
const unexpectedResponseTypeReceivedLogMessage =
    'Unexpected response type received';
const expectedTypeLogMessage = 'Expected type';
